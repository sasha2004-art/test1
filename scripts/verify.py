import subprocess
import sys
from pathlib import Path

class Colors:
    HEADER = "\033[95m"
    OKBLUE = "\033[94m"
    OKGREEN = "\033[92m"
    WARNING = "\033[93m"
    FAIL = "\033[91m"
    ENDC = "\033[0m"
    BOLD = "\033[1m"

def run_check(name, command, cwd, python_executable):
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–∞—Ö–≤–∞—Ç –≤—ã–≤–æ–¥–∞ –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã –ª–æ–≥–æ–≤.
    """
    print(f"\n{Colors.HEADER}--- {name} ---{Colors.ENDC}")
    
    full_command = [str(python_executable), "-m"] + command
    
    try:
        process = subprocess.run(
            full_command,
            cwd=cwd,
            check=True,
            text=True,
            capture_output=True,
            encoding='utf-8'
        )
        print(f"{Colors.OKGREEN}‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ.{Colors.ENDC}")
        if process.stdout.strip():
            print(process.stdout)
        return True
    except subprocess.CalledProcessError as e:
        print(f"{Colors.FAIL}‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≤–∞–ª–µ–Ω–∞!{Colors.ENDC}")
        if e.stdout.strip():
            print("--- STDOUT ---")
            print(e.stdout)
        if e.stderr.strip():
            print("--- STDERR ---")
            print(e.stderr)
        return False

def main():
    """–ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞."""
    project_root = Path(__file__).parent.parent
    venv_dir = project_root / ".venv"
    
    if not venv_dir.exists():
        print(f"{Colors.FAIL}–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ 'python start.py' —Å–Ω–∞—á–∞–ª–∞.{Colors.ENDC}")
        sys.exit(1)
        
    python_executable = venv_dir / "Scripts" / "python.exe" if sys.platform == "win32" else venv_dir / "bin" / "python"

    checks = [
        ("1. Formatting (black)", ["black", "--check", "."]),
        ("2. Linting (flake8)", ["flake8", ".", "--count", "--ignore=E501,W503", "--show-source", "--statistics"]),
        ("3. Type Checking (pyright)", ["pyright"]),
        ("4. Dependency Security (pip-audit)", ["pip_audit"]),
        ("5. Code Security (bandit)", ["bandit", "-r", ".", "-x", "./tests"]),
        ("6. Static Analysis (semgrep)", ["semgrep", "scan", "--config", "p/python", "--metrics=off"]),
        ("7. Unit Tests (pytest)", ["pytest", "--cov=app", "--cov-report=term-missing", "--cov-fail-under=90"]),
    ]

    print(f"{Colors.BOLD}üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π 7-—ç—Ç–∞–ø–Ω–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞...{Colors.ENDC}")
    
    all_passed = True
    for name, command in checks:
        if not run_check(name, command, project_root, python_executable):
            all_passed = False

    if all_passed:
        print(f"\n{Colors.OKGREEN}{Colors.BOLD}‚úÖ ‚úÖ ‚úÖ –í–ï–†–ò–§–ò–ö–ê–¶–ò–Ø –£–°–ü–ï–®–ù–û –ü–†–û–ô–î–ï–ù–ê! ‚úÖ ‚úÖ ‚úÖ{Colors.ENDC}")
        sys.exit(0)
    else:
        print(f"\n{Colors.FAIL}{Colors.BOLD}‚ùå ‚ùå ‚ùå –í–ï–†–ò–§–ò–ö–ê–¶–ò–Ø –ü–†–û–í–ê–õ–ï–ù–ê! ‚ùå ‚ùå ‚ùå{Colors.ENDC}")
        sys.exit(1)

if __name__ == "__main__":
    main()